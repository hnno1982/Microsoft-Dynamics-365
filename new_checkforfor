// JavaScript source code

function CheckUserRolefor()
{
	var roles = [];
	roles[0] = "CSR Opportunity C/R/W (For)";
	var hasUserGotSalesManagerAndAdminRole = currentUserHasSecurityRole(roles);
	if (hasUserGotSalesManagerAndAdminRole == true)
	{
		mftrue()
	}
	else if (hasUserGotSalesManagerAndAdminRole == false)
	{
		mffalse()
	}
}

function currentUserHasSecurityRole(roles)
{
	var fetchXml =
		"<fetch mapping='logical'>" +
		"<entity name='systemuser'>" +
		"<attribute name='systemuserid' />" +
		"<filter type='and'>" +
		"<condition attribute='systemuserid' operator='eq-userid' />" +
		"</filter>" +
		"<link-entity name='systemuserroles' from='systemuserid' to='systemuserid' visible='false' intersect='true'>" +
		"<link-entity name='role' from='roleid' to='roleid' alias='r'>" +
		"<filter type='or'>";
	for (var i = 0; i < roles.length; i++)
	{
		fetchXml += "<condition attribute='name' operator='eq' value='" + roles[i] + "' />";
	}
	fetchXml += "            </filter>" +
		"</link-entity>" +
		"</link-entity>" +
		"</entity>" +
		"</fetch>";
	var modifiedFetchXml = fetchXml.replace("&", "&amp;");
	var users = ExecuteFetch(modifiedFetchXml, "systemusers");
	if (users > 0) return true;
	else return false;
}

function ExecuteFetch(originalFetch, entityname)
{
	var count = 0;
	var fetch = encodeURI(originalFetch);
	var serverURL = Xrm.Page.context.getClientUrl();
	var Query = entityname + "?fetchXml=" + fetch;
	var req = new XMLHttpRequest();
	req.open("GET", serverURL + "/api/data/v8.0/" + Query, false);
	req.setRequestHeader("Accept", "application/json");
	req.setRequestHeader("Content-Type", "application/json; charset=utf-8");
	req.setRequestHeader("OData-MaxVersion", "4.0");
	req.setRequestHeader("OData-Version", "4.0");
	req.onreadystatechange = function ()
	{
		if (this.readyState == 4 /* complete */ )
		{
			req.onreadystatechange = null;
			if (this.status == 200)
			{
				var data = JSON.parse(this.response);
				if (data != null)
				{
					count = data.value.length;
				}
			}
			else
			{
				var error = JSON.parse(this.response).error;
				alert(error.message);
			}
		}
	};
	req.send();
	return count;
};

function mftrue()
{
	var formType = Xrm.Page.ui.getFormType();
	if (formType == 1 || formType == 2) Xrm.Page.getControl("new_noopportunitiy").setDisabled(false);
	Xrm.Page.getControl("new_for").setDisabled(false);
	Xrm.Page.getControl("description").setDisabled(false);
}

function mffalse()
{
	var formType = Xrm.Page.ui.getFormType();
	if (formType == 1 || formType == 2) Xrm.Page.getControl("new_noopportunitiy").setDisabled(true);
	Xrm.Page.getControl("new_for").setDisabled(true);
	Xrm.Page.getControl("description").setDisabled(true);
}