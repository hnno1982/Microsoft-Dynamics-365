function acccheker() {
    checkerSOE("parentaccountid");
}

function checkerSOE(lookupSchemaName) {

    // var lookupObjdir = Xrm.Page.getAttribute("estimatedclosedate").getValue();
    // if (lookupObjdir == null || lookupObjdir == 'undefined' || lookupObjdir == '') {
    var lookupObj = Xrm.Page.getAttribute(lookupSchemaName); //Check for Lookup Object
    if (lookupObj != null) {
        var lookupObjValue = lookupObj.getValue();//Check for Lookup Value
        if (lookupObjValue != null) {
            try {
                var lookupEntityType = lookupObjValue[0].entityType, //To get EntityName
                    lookupRecordGuid = lookupObjValue[0].id, // To get record GUID
                    lookupRecordName = lookupObjValue[0].name; //To get record Name 
            }

            catch (Error)
            { }

            if (lookupEntityType != null && lookupRecordGuid != null && lookupRecordName != null) {

                // Get the ID of the Customer 
                var fortype1 = Xrm.Page.getAttribute(lookupSchemaName).getValue()[0].name;
                var fortype2 = Xrm.Page.getAttribute(lookupSchemaName).getValue()[0].id;
                var sFetch = "<fetch version='1.0' output-format='xml-platform' mapping='logical' distinct='false'>" +
                "<entity name='account'>" +
                "<attribute name='accountid' />" +
                "<attribute name='new_sectorofeconomic' />" +
                "<attribute name='new_industrytype' />" +
                "<attribute name='new_industry' />" +
                "<attribute name='new_economicsector' />" +
                "<filter type='and'>" +
                "<condition attribute='accountid' operator='eq' uiname='" + fortype1 + "' uitype='account' value='" + fortype2 + "'/>" +
                "</filter>" +
                "</entity>" +
                "</fetch>"
                var encodedFetchXml = encodeURI(sFetch);
                var queryPath = "/api/data/v8.0/accounts?fetchXml=" + encodedFetchXml;
                var requestPath = Xrm.Page.context.getClientUrl() + queryPath;
                var req = new XMLHttpRequest();
                req.open("GET", requestPath, true);
                req.setRequestHeader("Accept", "application/json");
                req.setRequestHeader("Content-Type", "application/json; charset=utf-8");
                req.setRequestHeader('Prefer', 'odata.include-annotations="*"');
                req.onreadystatechange = function () {
                    if (this.readyState === 4) {
                        this.onreadystatechange = null;

                        if (this.status === 200) {
                            var returned = JSON.parse(this.responseText);
                            var results = returned.value;
                            for (var i = 0; i < results.length; i++) {
                                //var conroleda = results[i]["new_kickoffdate"];
                                // var conrolefe = results[i]["new_economicsector"];

                                var conrolefe = results[i]["_new_industrytype_value@OData.Community.Display.V1.FormattedValue"];

                                //var datee = new Date(conroleda)
                                //Xrm.Page.getAttribute("estimatedclosedate").setValue(datee);
                                //Xrm.Page.getAttribute("estimatedvalue").setValue(conrolefe);

                                if (conrolefe == undefined || conrolefe == null) {
                                    // array empty or does not exist
                                    //alert(conrolefe)
                                    Xrm.Page.ui.setFormNotification(" القطاع الإقتصادي لحساب " + fortype1 + " لم يحدد بعد قم بطلب تحديد القطاع المناسب لهذا الحساب ", "ERROR", "1");
                                    Xrm.Page.ui.setFormNotification(" بتاريخ 22/9/2020 لن يتم قبول أي فرصة لحساب شركة لم يتم تحديد نشاط فرعي ٢ لها ", "ERROR", "2");
                                    Xrm.Page.ui.setFormNotification(" لتحديد النشاط الفرعي ٢ لحساب " + fortype1 + " يرجى التواصل مع أ/إكتمال ", "INFO", "3");

                                    var controls = Xrm.Page.ui.controls.get();
                                    for (var i in controls) {
                                        var control = controls[i];
                                        if (control.getDisabled && control.setDisabled && !control.getDisabled()) {
                                            control.setDisabled(true);
                                        }
                                    }




                                }
                                else {
                                    Xrm.Page.ui.clearFormNotification("1");
                                    Xrm.Page.ui.clearFormNotification("3");

                                    var controls = Xrm.Page.ui.controls.get();
                                    for (var i in controls) {
                                        var control = controls[i];
                                        if (control.getDisabled && control.setDisabled && !control.getDisabled()) {
                                            control.setDisabled(false);
                                        }
                                    }
                                }

                            }
                        }
                        else {
                            alert(this.statusText);
                        }
                    }
                };
                req.send();
            }
        }
    }
    //}
}