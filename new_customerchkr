function customerchkr() {
    checkerSOE("new_entitylookupname");
}

function checkerSOE(lookupSchemaName) {

    var lookupObj = Xrm.Page.getAttribute(lookupSchemaName); //Check for Lookup Object
    if (lookupObj != null) {
        var lookupObjValue = lookupObj.getValue();//Check for Lookup Value
        if (lookupObjValue != null) {
            try {
                var lookupEntityType = lookupObjValue[0].entityType, //To get EntityName
                    lookupRecordGuid = lookupObjValue[0].id, // To get record GUID
                    lookupRecordName = lookupObjValue[0].name; //To get record Name 
            }

            catch (Error)
            { }

            //Account side
            if (lookupEntityType != null && lookupRecordGuid != null && lookupRecordName != null && lookupEntityType == "account") {

                // Get the ID of the Customer 
                var fortype1 = Xrm.Page.getAttribute(lookupSchemaName).getValue()[0].name;
                var fortype2 = Xrm.Page.getAttribute(lookupSchemaName).getValue()[0].id;
                var sFetch = "<fetch version='1.0' output-format='xml-platform' mapping='logical' distinct='false'>" +
                "<entity name='account'>" +
                "<attribute name='accountid' />" +
                "<attribute name='new_enaccountname' />" +
                "<attribute name='new_country' />" +
                "<attribute name='new_industry' />" +
                "<attribute name='new_economicsector' />" +
                "<filter type='and'>" +
                "<condition attribute='accountid' operator='eq' uiname='" + fortype1 + "' uitype='account' value='" + fortype2 + "'/>" +
                "</filter>" +
                "</entity>" +
                "</fetch>"
                var encodedFetchXml = encodeURI(sFetch);
                var queryPath = "/api/data/v8.0/accounts?fetchXml=" + encodedFetchXml;
                var requestPath = Xrm.Page.context.getClientUrl() + queryPath;
                var req = new XMLHttpRequest();
                req.open("GET", requestPath, true);
                req.setRequestHeader("Accept", "application/json");
                req.setRequestHeader("Content-Type", "application/json; charset=utf-8");
                req.setRequestHeader('Prefer', 'odata.include-annotations="*"');
                req.onreadystatechange = function () {
                    if (this.readyState === 4) {
                        this.onreadystatechange = null;

                        if (this.status === 200) {
                            var returned = JSON.parse(this.responseText);
                            var results = returned.value;
                            for (var i = 0; i < results.length; i++) {

                                Xrm.Page.getAttribute("new_entitytype").setValue(null)
                                Xrm.Page.getAttribute("new_entityname").setValue(null)
                                Xrm.Page.getAttribute("new_marketplace").setValue(null)
                                Xrm.Page.ui.controls.get("new_entityname").setFocus();


                                Xrm.Page.getAttribute("new_entitytype").setValue(100000000);
                                var accnamee = results[i]["new_enaccountname"];

                                var accnameen = accnamee + " "

                                Xrm.Page.getAttribute("new_entityname").setValue(accnameen);
                                var inout = results[i]["_new_country_value@OData.Community.Display.V1.FormattedValue"];
                                if (inout == "Kuwait") {
                                    Xrm.Page.getAttribute("new_marketplace").setValue(100000000);
                                }
                                else if (inout != "Kuwait" && inout != null) {
                                    Xrm.Page.getAttribute("new_marketplace").setValue(100000001);
                                }
                            }
                        }
                        else {
                            alert(this.statusText);
                        }
                    }
                };
                req.send();
            }

            //Contact side
            if (lookupEntityType != null && lookupRecordGuid != null && lookupRecordName != null && lookupEntityType == "contact") {

                // Get the ID of the Customer 
                var fortype1 = Xrm.Page.getAttribute(lookupSchemaName).getValue()[0].name;
                var fortype2 = Xrm.Page.getAttribute(lookupSchemaName).getValue()[0].id;
                var sFetch = "<fetch version='1.0' output-format='xml-platform' mapping='logical' distinct='false'>" +
                "<entity name='contact'>" +
                "<attribute name='new_enfullname' />" +
                "<filter type='and'>" +
                "<condition attribute='contactid' operator='eq' uiname='" + fortype1 + "' uitype='contact' value='" + fortype2 + "'/>" +
                "</filter></entity>" +
                "</fetch>";
                var encodedFetchXml = encodeURI(sFetch);
                var queryPath = "/api/data/v8.0/contacts?fetchXml=" + encodedFetchXml;
                var requestPath = Xrm.Page.context.getClientUrl() + queryPath;
                var req = new XMLHttpRequest();
                req.open("GET", requestPath, true);
                req.setRequestHeader("Accept", "application/json");
                req.setRequestHeader("Content-Type", "application/json; charset=utf-8");
                req.onreadystatechange = function () {
                    if (this.readyState === 4) {
                        this.onreadystatechange = null;
                        if (this.status === 200) {
                            var returned = JSON.parse(this.responseText);
                            var results = returned.value;

                            for (var i = 0; i < results.length; i++) {

                                Xrm.Page.getAttribute("new_entitytype").setValue(null)
                                Xrm.Page.getAttribute("new_entityname").setValue(null)
                                Xrm.Page.getAttribute("new_marketplace").setValue(null)
                                Xrm.Page.ui.controls.get("new_entityname").setFocus();

                                Xrm.Page.getAttribute("new_entitytype").setValue(100000001);
                                var accnamee = results[i]["new_enfullname"];

                                var accnameen = accnamee + " "

                                Xrm.Page.getAttribute("new_entityname").setValue(accnameen);
                            }
                        }
                        else {
                            alert(this.statusText);
                        }
                    }
                };
                req.send();
            }
        }
    }
}